Terminals unused in grammar

   QUIT
   NONCHAR
   ILLEGALCHAR
   OPERATION
   KEYWORD
   MATHOP
   CHSIGN
   SIZEOF


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: declList decl
    3         | decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpec varDeclList SEMICOLON

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON
    8              | varDecl

    9 varDeclList: varDeclList COMMA varDeclInit
   10            | varDeclInit

   11 varDeclInit: varDeclId
   12            | varDeclId COLON simpleExp

   13 varDeclId: id
   14          | id LBRACKET NUMCONST RBRACKET

   15 id: ID

   16 typeSpec: BOOL
   17         | CHAR
   18         | INT

   19 funDecl: typeSpec id LPAREN parms RPAREN compoundStmt
   20        | id LPAREN parms RPAREN compoundStmt
   21        | typeSpec id LPAREN RPAREN compoundStmt
   22        | id LPAREN RPAREN compoundStmt

   23 parms: parmList

   24 parmList: parmList SEMICOLON parmTypeList
   25         | parmTypeList

   26 parmTypeList: typeSpec parmIdList

   27 parmIdList: parmIdList COMMA parmId
   28           | parmId

   29 parmId: id
   30       | id LBRACKET RBRACKET

   31 stmt: matchedStmt
   32     | openStmt

   33 matchedStmt: expStmt
   34            | compoundStmt
   35            | matchedIterStmt
   36            | matchedSelectStmt
   37            | returnStmt
   38            | breakStmt

   39 openStmt: openSelectStmt
   40         | openIterStmt

   41 expStmt: exp SEMICOLON
   42        | SEMICOLON

   43 compoundStmt: LCURLY localDecls stmtList RCURLY
   44             | LCURLY stmtList RCURLY
   45             | LCURLY localDecls RCURLY
   46             | LCURLY RCURLY

   47 localDecls: localDecls scopedVarDecl
   48           | scopedVarDecl

   49 stmtList: stmtList stmt
   50         | stmt

   51 matchedSelectStmt: IF simpleExp THEN matchedStmt ELSE matchedStmt

   52 openSelectStmt: IF simpleExp THEN stmt
   53               | IF simpleExp THEN matchedStmt ELSE openStmt

   54 matchedIterStmt: WHILE simpleExp DO matchedStmt
   55                | FOR id ASGN iterRange DO matchedStmt

   56 openIterStmt: WHILE simpleExp DO openStmt
   57             | FOR id ASGN iterRange DO openStmt

   58 iterRange: simpleExp TO simpleExp
   59          | simpleExp TO simpleExp BY simpleExp

   60 returnStmt: RETURN SEMICOLON
   61           | RETURN exp SEMICOLON

   62 breakStmt: BREAK SEMICOLON

   63 exp: mutable assignop exp
   64    | mutable INC
   65    | mutable DEC
   66    | simpleExp

   67 assignop: ASGN
   68         | ADDASS
   69         | SUBASS
   70         | MULASS
   71         | DIVASS

   72 simpleExp: simpleExp OR andExp
   73          | andExp

   74 andExp: andExp AND unaryRelExp
   75       | unaryRelExp

   76 unaryRelExp: NOT unaryRelExp
   77            | relExp

   78 relExp: sumExp relop sumExp
   79       | sumExp

   80 relop: LESSER
   81      | LEQ
   82      | GREATER
   83      | GEQ
   84      | EQ
   85      | NEQ

   86 sumExp: sumExp sumop mulExp
   87       | mulExp

   88 sumop: ADD
   89      | SUB

   90 mulExp: mulExp mulop unaryExp
   91       | unaryExp

   92 mulop: MUL
   93      | DIV
   94      | MOD

   95 unaryExp: unaryop unaryExp
   96         | factor

   97 unaryop: SUB
   98        | MUL
   99        | QUESTION

  100 factor: mutable
  101       | immutable

  102 mutable: id
  103        | id LBRACKET exp RBRACKET

  104 immutable: LPAREN exp RPAREN
  105          | call
  106          | constant

  107 call: id LPAREN argList RPAREN
  108     | id LPAREN RPAREN

  109 argList: argList COMMA exp
  110        | exp

  111 constant: NUMCONST
  112         | CHARCONST
  113         | STRINGCONST
  114         | BOOLCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
QUIT (258)
NUMCONST (259) 14 111
ID (260) 15
STRINGCONST (261) 113
CHARCONST (262) 112
BOOLCONST (263) 114
NONCHAR (264)
ILLEGALCHAR (265)
OPERATION (266)
KEYWORD (267)
BOOL (268) 16
CHAR (269) 17
INT (270) 18
EQ (271) 84
GREATER (272) 82
LESSER (273) 80
SEMICOLON (274) 6 7 24 41 42 60 61 62
COMMA (275) 9 27 109
LCURLY (276) 43 44 45 46
RCURLY (277) 43 44 45 46
LBRACKET (278) 14 30 103
RBRACKET (279) 14 30 103
LPAREN (280) 19 20 21 22 104 107 108
RPAREN (281) 19 20 21 22 104 107 108
COLON (282) 12
QUESTION (283) 99
MATHOP (284)
ADDASS (285) 68
SUBASS (286) 69
MULASS (287) 70
DIVASS (288) 71
INC (289) 64
DEC (290) 65
LEQ (291) 81
GEQ (292) 83
NEQ (293) 85
ASGN (294) 55 57 67
ADD (295) 88
SUB (296) 89 97
MUL (297) 92 98
DIV (298) 93
MOD (299) 94
BREAK (300) 62
TO (301) 58 59
BY (302) 59
IF (303) 51 52 53
THEN (304) 51 52 53
ELSE (305) 51 53
WHILE (306) 54 56
DO (307) 54 55 56 57
FOR (308) 55 57
NOT (309) 76
STATIC (310) 7
OR (311) 72
AND (312) 74
RETURN (313) 60 61
CHSIGN (314)
SIZEOF (315)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
declList (63)
    on left: 2 3, on right: 1 2
decl (64)
    on left: 4 5, on right: 2 3
varDecl (65)
    on left: 6, on right: 4 8
scopedVarDecl (66)
    on left: 7 8, on right: 47 48
varDeclList (67)
    on left: 9 10, on right: 6 7 9
varDeclInit (68)
    on left: 11 12, on right: 9 10
varDeclId (69)
    on left: 13 14, on right: 11 12
id (70)
    on left: 15, on right: 13 14 19 20 21 22 29 30 55 57 102 103 107
    108
typeSpec (71)
    on left: 16 17 18, on right: 6 7 19 21 26
funDecl (72)
    on left: 19 20 21 22, on right: 5
parms (73)
    on left: 23, on right: 19 20
parmList (74)
    on left: 24 25, on right: 23 24
parmTypeList (75)
    on left: 26, on right: 24 25
parmIdList (76)
    on left: 27 28, on right: 26 27
parmId (77)
    on left: 29 30, on right: 27 28
stmt (78)
    on left: 31 32, on right: 49 50 52
matchedStmt (79)
    on left: 33 34 35 36 37 38, on right: 31 51 53 54 55
openStmt (80)
    on left: 39 40, on right: 32 53 56 57
expStmt (81)
    on left: 41 42, on right: 33
compoundStmt (82)
    on left: 43 44 45 46, on right: 19 20 21 22 34
localDecls (83)
    on left: 47 48, on right: 43 45 47
stmtList (84)
    on left: 49 50, on right: 43 44 49
matchedSelectStmt (85)
    on left: 51, on right: 36
openSelectStmt (86)
    on left: 52 53, on right: 39
matchedIterStmt (87)
    on left: 54 55, on right: 35
openIterStmt (88)
    on left: 56 57, on right: 40
iterRange (89)
    on left: 58 59, on right: 55 57
returnStmt (90)
    on left: 60 61, on right: 37
breakStmt (91)
    on left: 62, on right: 38
exp (92)
    on left: 63 64 65 66, on right: 41 61 63 103 104 109 110
assignop (93)
    on left: 67 68 69 70 71, on right: 63
simpleExp (94)
    on left: 72 73, on right: 12 51 52 53 54 56 58 59 66 72
andExp (95)
    on left: 74 75, on right: 72 73 74
unaryRelExp (96)
    on left: 76 77, on right: 74 75 76
relExp (97)
    on left: 78 79, on right: 77
relop (98)
    on left: 80 81 82 83 84 85, on right: 78
sumExp (99)
    on left: 86 87, on right: 78 79 86
sumop (100)
    on left: 88 89, on right: 86
mulExp (101)
    on left: 90 91, on right: 86 87 90
mulop (102)
    on left: 92 93 94, on right: 90
unaryExp (103)
    on left: 95 96, on right: 90 91 95
unaryop (104)
    on left: 97 98 99, on right: 95
factor (105)
    on left: 100 101, on right: 96
mutable (106)
    on left: 102 103, on right: 63 64 65 100
immutable (107)
    on left: 104 105 106, on right: 101
call (108)
    on left: 107 108, on right: 105
argList (109)
    on left: 109 110, on right: 107 109
constant (110)
    on left: 111 112 113 114, on right: 106


State 0

    0 $accept: . program $end

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    program   go to state 5
    declList  go to state 6
    decl      go to state 7
    varDecl   go to state 8
    id        go to state 9
    typeSpec  go to state 10
    funDecl   go to state 11


State 1

   15 id: ID .

    $default  reduce using rule 15 (id)


State 2

   16 typeSpec: BOOL .

    $default  reduce using rule 16 (typeSpec)


State 3

   17 typeSpec: CHAR .

    $default  reduce using rule 17 (typeSpec)


State 4

   18 typeSpec: INT .

    $default  reduce using rule 18 (typeSpec)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 12


State 6

    1 program: declList .
    2 declList: declList . decl

    ID    shift, and go to state 1
    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl      go to state 13
    varDecl   go to state 8
    id        go to state 9
    typeSpec  go to state 10
    funDecl   go to state 11


State 7

    3 declList: decl .

    $default  reduce using rule 3 (declList)


State 8

    4 decl: varDecl .

    $default  reduce using rule 4 (decl)


State 9

   20 funDecl: id . LPAREN parms RPAREN compoundStmt
   22        | id . LPAREN RPAREN compoundStmt

    LPAREN  shift, and go to state 14


State 10

    6 varDecl: typeSpec . varDeclList SEMICOLON
   19 funDecl: typeSpec . id LPAREN parms RPAREN compoundStmt
   21        | typeSpec . id LPAREN RPAREN compoundStmt

    ID  shift, and go to state 1

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclId    go to state 17
    id           go to state 18


State 11

    5 decl: funDecl .

    $default  reduce using rule 5 (decl)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 declList: declList decl .

    $default  reduce using rule 2 (declList)


State 14

   20 funDecl: id LPAREN . parms RPAREN compoundStmt
   22        | id LPAREN . RPAREN compoundStmt

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    INT     shift, and go to state 4
    RPAREN  shift, and go to state 19

    typeSpec      go to state 20
    parms         go to state 21
    parmList      go to state 22
    parmTypeList  go to state 23


State 15

    6 varDecl: typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 24
    COMMA      shift, and go to state 25


State 16

   10 varDeclList: varDeclInit .

    $default  reduce using rule 10 (varDeclList)


State 17

   11 varDeclInit: varDeclId .
   12            | varDeclId . COLON simpleExp

    COLON  shift, and go to state 26

    $default  reduce using rule 11 (varDeclInit)


State 18

   13 varDeclId: id .
   14          | id . LBRACKET NUMCONST RBRACKET
   19 funDecl: typeSpec id . LPAREN parms RPAREN compoundStmt
   21        | typeSpec id . LPAREN RPAREN compoundStmt

    LBRACKET  shift, and go to state 27
    LPAREN    shift, and go to state 28

    $default  reduce using rule 13 (varDeclId)


State 19

   22 funDecl: id LPAREN RPAREN . compoundStmt

    LCURLY  shift, and go to state 29

    compoundStmt  go to state 30


State 20

   26 parmTypeList: typeSpec . parmIdList

    ID  shift, and go to state 1

    id          go to state 31
    parmIdList  go to state 32
    parmId      go to state 33


State 21

   20 funDecl: id LPAREN parms . RPAREN compoundStmt

    RPAREN  shift, and go to state 34


State 22

   23 parms: parmList .
   24 parmList: parmList . SEMICOLON parmTypeList

    SEMICOLON  shift, and go to state 35

    $default  reduce using rule 23 (parms)


State 23

   25 parmList: parmTypeList .

    $default  reduce using rule 25 (parmList)


State 24

    6 varDecl: typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 6 (varDecl)


State 25

    9 varDeclList: varDeclList COMMA . varDeclInit

    ID  shift, and go to state 1

    varDeclInit  go to state 36
    varDeclId    go to state 17
    id           go to state 37


State 26

   12 varDeclInit: varDeclId COLON . simpleExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    simpleExp    go to state 48
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 27

   14 varDeclId: id LBRACKET . NUMCONST RBRACKET

    NUMCONST  shift, and go to state 61


State 28

   19 funDecl: typeSpec id LPAREN . parms RPAREN compoundStmt
   21        | typeSpec id LPAREN . RPAREN compoundStmt

    BOOL    shift, and go to state 2
    CHAR    shift, and go to state 3
    INT     shift, and go to state 4
    RPAREN  shift, and go to state 62

    typeSpec      go to state 20
    parms         go to state 63
    parmList      go to state 22
    parmTypeList  go to state 23


State 29

   43 compoundStmt: LCURLY . localDecls stmtList RCURLY
   44             | LCURLY . stmtList RCURLY
   45             | LCURLY . localDecls RCURLY
   46             | LCURLY . RCURLY

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    BOOL         shift, and go to state 2
    CHAR         shift, and go to state 3
    INT          shift, and go to state 4
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    RCURLY       shift, and go to state 65
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    STATIC       shift, and go to state 70
    RETURN       shift, and go to state 71

    varDecl            go to state 72
    scopedVarDecl      go to state 73
    id                 go to state 47
    typeSpec           go to state 74
    stmt               go to state 75
    matchedStmt        go to state 76
    openStmt           go to state 77
    expStmt            go to state 78
    compoundStmt       go to state 79
    localDecls         go to state 80
    stmtList           go to state 81
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 30

   22 funDecl: id LPAREN RPAREN compoundStmt .

    $default  reduce using rule 22 (funDecl)


State 31

   29 parmId: id .
   30       | id . LBRACKET RBRACKET

    LBRACKET  shift, and go to state 91

    $default  reduce using rule 29 (parmId)


State 32

   26 parmTypeList: typeSpec parmIdList .
   27 parmIdList: parmIdList . COMMA parmId

    COMMA  shift, and go to state 92

    $default  reduce using rule 26 (parmTypeList)


State 33

   28 parmIdList: parmId .

    $default  reduce using rule 28 (parmIdList)


State 34

   20 funDecl: id LPAREN parms RPAREN . compoundStmt

    LCURLY  shift, and go to state 29

    compoundStmt  go to state 93


State 35

   24 parmList: parmList SEMICOLON . parmTypeList

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    typeSpec      go to state 20
    parmTypeList  go to state 94


State 36

    9 varDeclList: varDeclList COMMA varDeclInit .

    $default  reduce using rule 9 (varDeclList)


State 37

   13 varDeclId: id .
   14          | id . LBRACKET NUMCONST RBRACKET

    LBRACKET  shift, and go to state 27

    $default  reduce using rule 13 (varDeclId)


State 38

  111 constant: NUMCONST .

    $default  reduce using rule 111 (constant)


State 39

  113 constant: STRINGCONST .

    $default  reduce using rule 113 (constant)


State 40

  112 constant: CHARCONST .

    $default  reduce using rule 112 (constant)


State 41

  114 constant: BOOLCONST .

    $default  reduce using rule 114 (constant)


State 42

  104 immutable: LPAREN . exp RPAREN

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    exp          go to state 95
    simpleExp    go to state 89
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 90
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 43

   99 unaryop: QUESTION .

    $default  reduce using rule 99 (unaryop)


State 44

   97 unaryop: SUB .

    $default  reduce using rule 97 (unaryop)


State 45

   98 unaryop: MUL .

    $default  reduce using rule 98 (unaryop)


State 46

   76 unaryRelExp: NOT . unaryRelExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    unaryRelExp  go to state 96
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 47

  102 mutable: id .
  103        | id . LBRACKET exp RBRACKET
  107 call: id . LPAREN argList RPAREN
  108     | id . LPAREN RPAREN

    LBRACKET  shift, and go to state 97
    LPAREN    shift, and go to state 98

    $default  reduce using rule 102 (mutable)


State 48

   12 varDeclInit: varDeclId COLON simpleExp .
   72 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 99

    $default  reduce using rule 12 (varDeclInit)


State 49

   73 simpleExp: andExp .
   74 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 100

    $default  reduce using rule 73 (simpleExp)


State 50

   75 andExp: unaryRelExp .

    $default  reduce using rule 75 (andExp)


State 51

   77 unaryRelExp: relExp .

    $default  reduce using rule 77 (unaryRelExp)


State 52

   78 relExp: sumExp . relop sumExp
   79       | sumExp .
   86 sumExp: sumExp . sumop mulExp

    EQ       shift, and go to state 101
    GREATER  shift, and go to state 102
    LESSER   shift, and go to state 103
    LEQ      shift, and go to state 104
    GEQ      shift, and go to state 105
    NEQ      shift, and go to state 106
    ADD      shift, and go to state 107
    SUB      shift, and go to state 108

    $default  reduce using rule 79 (relExp)

    relop  go to state 109
    sumop  go to state 110


State 53

   87 sumExp: mulExp .
   90 mulExp: mulExp . mulop unaryExp

    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    MOD  shift, and go to state 113

    $default  reduce using rule 87 (sumExp)

    mulop  go to state 114


State 54

   91 mulExp: unaryExp .

    $default  reduce using rule 91 (mulExp)


State 55

   95 unaryExp: unaryop . unaryExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45

    id         go to state 47
    unaryExp   go to state 115
    unaryop    go to state 55
    factor     go to state 56
    mutable    go to state 57
    immutable  go to state 58
    call       go to state 59
    constant   go to state 60


State 56

   96 unaryExp: factor .

    $default  reduce using rule 96 (unaryExp)


State 57

  100 factor: mutable .

    $default  reduce using rule 100 (factor)


State 58

  101 factor: immutable .

    $default  reduce using rule 101 (factor)


State 59

  105 immutable: call .

    $default  reduce using rule 105 (immutable)


State 60

  106 immutable: constant .

    $default  reduce using rule 106 (immutable)


State 61

   14 varDeclId: id LBRACKET NUMCONST . RBRACKET

    RBRACKET  shift, and go to state 116


State 62

   21 funDecl: typeSpec id LPAREN RPAREN . compoundStmt

    LCURLY  shift, and go to state 29

    compoundStmt  go to state 117


State 63

   19 funDecl: typeSpec id LPAREN parms . RPAREN compoundStmt

    RPAREN  shift, and go to state 118


State 64

   42 expStmt: SEMICOLON .

    $default  reduce using rule 42 (expStmt)


State 65

   46 compoundStmt: LCURLY RCURLY .

    $default  reduce using rule 46 (compoundStmt)


State 66

   62 breakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 67

   51 matchedSelectStmt: IF . simpleExp THEN matchedStmt ELSE matchedStmt
   52 openSelectStmt: IF . simpleExp THEN stmt
   53               | IF . simpleExp THEN matchedStmt ELSE openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    simpleExp    go to state 120
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 68

   54 matchedIterStmt: WHILE . simpleExp DO matchedStmt
   56 openIterStmt: WHILE . simpleExp DO openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    simpleExp    go to state 121
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 69

   55 matchedIterStmt: FOR . id ASGN iterRange DO matchedStmt
   57 openIterStmt: FOR . id ASGN iterRange DO openStmt

    ID  shift, and go to state 1

    id  go to state 122


State 70

    7 scopedVarDecl: STATIC . typeSpec varDeclList SEMICOLON

    BOOL  shift, and go to state 2
    CHAR  shift, and go to state 3
    INT   shift, and go to state 4

    typeSpec  go to state 123


State 71

   60 returnStmt: RETURN . SEMICOLON
   61           | RETURN . exp SEMICOLON

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 124
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    exp          go to state 125
    simpleExp    go to state 89
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 90
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 72

    8 scopedVarDecl: varDecl .

    $default  reduce using rule 8 (scopedVarDecl)


State 73

   48 localDecls: scopedVarDecl .

    $default  reduce using rule 48 (localDecls)


State 74

    6 varDecl: typeSpec . varDeclList SEMICOLON

    ID  shift, and go to state 1

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclId    go to state 17
    id           go to state 37


State 75

   50 stmtList: stmt .

    $default  reduce using rule 50 (stmtList)


State 76

   31 stmt: matchedStmt .

    $default  reduce using rule 31 (stmt)


State 77

   32 stmt: openStmt .

    $default  reduce using rule 32 (stmt)


State 78

   33 matchedStmt: expStmt .

    $default  reduce using rule 33 (matchedStmt)


State 79

   34 matchedStmt: compoundStmt .

    $default  reduce using rule 34 (matchedStmt)


State 80

   43 compoundStmt: LCURLY localDecls . stmtList RCURLY
   45             | LCURLY localDecls . RCURLY
   47 localDecls: localDecls . scopedVarDecl

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    BOOL         shift, and go to state 2
    CHAR         shift, and go to state 3
    INT          shift, and go to state 4
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    RCURLY       shift, and go to state 126
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    STATIC       shift, and go to state 70
    RETURN       shift, and go to state 71

    varDecl            go to state 72
    scopedVarDecl      go to state 127
    id                 go to state 47
    typeSpec           go to state 74
    stmt               go to state 75
    matchedStmt        go to state 76
    openStmt           go to state 77
    expStmt            go to state 78
    compoundStmt       go to state 79
    stmtList           go to state 128
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 81

   44 compoundStmt: LCURLY stmtList . RCURLY
   49 stmtList: stmtList . stmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    RCURLY       shift, and go to state 129
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    RETURN       shift, and go to state 71

    id                 go to state 47
    stmt               go to state 130
    matchedStmt        go to state 76
    openStmt           go to state 77
    expStmt            go to state 78
    compoundStmt       go to state 79
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 82

   36 matchedStmt: matchedSelectStmt .

    $default  reduce using rule 36 (matchedStmt)


State 83

   39 openStmt: openSelectStmt .

    $default  reduce using rule 39 (openStmt)


State 84

   35 matchedStmt: matchedIterStmt .

    $default  reduce using rule 35 (matchedStmt)


State 85

   40 openStmt: openIterStmt .

    $default  reduce using rule 40 (openStmt)


State 86

   37 matchedStmt: returnStmt .

    $default  reduce using rule 37 (matchedStmt)


State 87

   38 matchedStmt: breakStmt .

    $default  reduce using rule 38 (matchedStmt)


State 88

   41 expStmt: exp . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 89

   66 exp: simpleExp .
   72 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 99

    $default  reduce using rule 66 (exp)


State 90

   63 exp: mutable . assignop exp
   64    | mutable . INC
   65    | mutable . DEC
  100 factor: mutable .

    ADDASS  shift, and go to state 132
    SUBASS  shift, and go to state 133
    MULASS  shift, and go to state 134
    DIVASS  shift, and go to state 135
    INC     shift, and go to state 136
    DEC     shift, and go to state 137
    ASGN    shift, and go to state 138

    $default  reduce using rule 100 (factor)

    assignop  go to state 139


State 91

   30 parmId: id LBRACKET . RBRACKET

    RBRACKET  shift, and go to state 140


State 92

   27 parmIdList: parmIdList COMMA . parmId

    ID  shift, and go to state 1

    id      go to state 31
    parmId  go to state 141


State 93

   20 funDecl: id LPAREN parms RPAREN compoundStmt .

    $default  reduce using rule 20 (funDecl)


State 94

   24 parmList: parmList SEMICOLON parmTypeList .

    $default  reduce using rule 24 (parmList)


State 95

  104 immutable: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 142


State 96

   76 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 76 (unaryRelExp)


State 97

  103 mutable: id LBRACKET . exp RBRACKET

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    exp          go to state 143
    simpleExp    go to state 89
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 90
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 98

  107 call: id LPAREN . argList RPAREN
  108     | id LPAREN . RPAREN

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    RPAREN       shift, and go to state 144
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    exp          go to state 145
    simpleExp    go to state 89
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 90
    immutable    go to state 58
    call         go to state 59
    argList      go to state 146
    constant     go to state 60


State 99

   72 simpleExp: simpleExp OR . andExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    andExp       go to state 147
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 100

   74 andExp: andExp AND . unaryRelExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    unaryRelExp  go to state 148
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 101

   84 relop: EQ .

    $default  reduce using rule 84 (relop)


State 102

   82 relop: GREATER .

    $default  reduce using rule 82 (relop)


State 103

   80 relop: LESSER .

    $default  reduce using rule 80 (relop)


State 104

   81 relop: LEQ .

    $default  reduce using rule 81 (relop)


State 105

   83 relop: GEQ .

    $default  reduce using rule 83 (relop)


State 106

   85 relop: NEQ .

    $default  reduce using rule 85 (relop)


State 107

   88 sumop: ADD .

    $default  reduce using rule 88 (sumop)


State 108

   89 sumop: SUB .

    $default  reduce using rule 89 (sumop)


State 109

   78 relExp: sumExp relop . sumExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45

    id         go to state 47
    sumExp     go to state 149
    mulExp     go to state 53
    unaryExp   go to state 54
    unaryop    go to state 55
    factor     go to state 56
    mutable    go to state 57
    immutable  go to state 58
    call       go to state 59
    constant   go to state 60


State 110

   86 sumExp: sumExp sumop . mulExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45

    id         go to state 47
    mulExp     go to state 150
    unaryExp   go to state 54
    unaryop    go to state 55
    factor     go to state 56
    mutable    go to state 57
    immutable  go to state 58
    call       go to state 59
    constant   go to state 60


State 111

   92 mulop: MUL .

    $default  reduce using rule 92 (mulop)


State 112

   93 mulop: DIV .

    $default  reduce using rule 93 (mulop)


State 113

   94 mulop: MOD .

    $default  reduce using rule 94 (mulop)


State 114

   90 mulExp: mulExp mulop . unaryExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45

    id         go to state 47
    unaryExp   go to state 151
    unaryop    go to state 55
    factor     go to state 56
    mutable    go to state 57
    immutable  go to state 58
    call       go to state 59
    constant   go to state 60


State 115

   95 unaryExp: unaryop unaryExp .

    $default  reduce using rule 95 (unaryExp)


State 116

   14 varDeclId: id LBRACKET NUMCONST RBRACKET .

    $default  reduce using rule 14 (varDeclId)


State 117

   21 funDecl: typeSpec id LPAREN RPAREN compoundStmt .

    $default  reduce using rule 21 (funDecl)


State 118

   19 funDecl: typeSpec id LPAREN parms RPAREN . compoundStmt

    LCURLY  shift, and go to state 29

    compoundStmt  go to state 152


State 119

   62 breakStmt: BREAK SEMICOLON .

    $default  reduce using rule 62 (breakStmt)


State 120

   51 matchedSelectStmt: IF simpleExp . THEN matchedStmt ELSE matchedStmt
   52 openSelectStmt: IF simpleExp . THEN stmt
   53               | IF simpleExp . THEN matchedStmt ELSE openStmt
   72 simpleExp: simpleExp . OR andExp

    THEN  shift, and go to state 153
    OR    shift, and go to state 99


State 121

   54 matchedIterStmt: WHILE simpleExp . DO matchedStmt
   56 openIterStmt: WHILE simpleExp . DO openStmt
   72 simpleExp: simpleExp . OR andExp

    DO  shift, and go to state 154
    OR  shift, and go to state 99


State 122

   55 matchedIterStmt: FOR id . ASGN iterRange DO matchedStmt
   57 openIterStmt: FOR id . ASGN iterRange DO openStmt

    ASGN  shift, and go to state 155


State 123

    7 scopedVarDecl: STATIC typeSpec . varDeclList SEMICOLON

    ID  shift, and go to state 1

    varDeclList  go to state 156
    varDeclInit  go to state 16
    varDeclId    go to state 17
    id           go to state 37


State 124

   60 returnStmt: RETURN SEMICOLON .

    $default  reduce using rule 60 (returnStmt)


State 125

   61 returnStmt: RETURN exp . SEMICOLON

    SEMICOLON  shift, and go to state 157


State 126

   45 compoundStmt: LCURLY localDecls RCURLY .

    $default  reduce using rule 45 (compoundStmt)


State 127

   47 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 47 (localDecls)


State 128

   43 compoundStmt: LCURLY localDecls stmtList . RCURLY
   49 stmtList: stmtList . stmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    RCURLY       shift, and go to state 158
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    RETURN       shift, and go to state 71

    id                 go to state 47
    stmt               go to state 130
    matchedStmt        go to state 76
    openStmt           go to state 77
    expStmt            go to state 78
    compoundStmt       go to state 79
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 129

   44 compoundStmt: LCURLY stmtList RCURLY .

    $default  reduce using rule 44 (compoundStmt)


State 130

   49 stmtList: stmtList stmt .

    $default  reduce using rule 49 (stmtList)


State 131

   41 expStmt: exp SEMICOLON .

    $default  reduce using rule 41 (expStmt)


State 132

   68 assignop: ADDASS .

    $default  reduce using rule 68 (assignop)


State 133

   69 assignop: SUBASS .

    $default  reduce using rule 69 (assignop)


State 134

   70 assignop: MULASS .

    $default  reduce using rule 70 (assignop)


State 135

   71 assignop: DIVASS .

    $default  reduce using rule 71 (assignop)


State 136

   64 exp: mutable INC .

    $default  reduce using rule 64 (exp)


State 137

   65 exp: mutable DEC .

    $default  reduce using rule 65 (exp)


State 138

   67 assignop: ASGN .

    $default  reduce using rule 67 (assignop)


State 139

   63 exp: mutable assignop . exp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    exp          go to state 159
    simpleExp    go to state 89
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 90
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 140

   30 parmId: id LBRACKET RBRACKET .

    $default  reduce using rule 30 (parmId)


State 141

   27 parmIdList: parmIdList COMMA parmId .

    $default  reduce using rule 27 (parmIdList)


State 142

  104 immutable: LPAREN exp RPAREN .

    $default  reduce using rule 104 (immutable)


State 143

  103 mutable: id LBRACKET exp . RBRACKET

    RBRACKET  shift, and go to state 160


State 144

  108 call: id LPAREN RPAREN .

    $default  reduce using rule 108 (call)


State 145

  110 argList: exp .

    $default  reduce using rule 110 (argList)


State 146

  107 call: id LPAREN argList . RPAREN
  109 argList: argList . COMMA exp

    COMMA   shift, and go to state 161
    RPAREN  shift, and go to state 162


State 147

   72 simpleExp: simpleExp OR andExp .
   74 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 100

    $default  reduce using rule 72 (simpleExp)


State 148

   74 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 74 (andExp)


State 149

   78 relExp: sumExp relop sumExp .
   86 sumExp: sumExp . sumop mulExp

    ADD  shift, and go to state 107
    SUB  shift, and go to state 108

    $default  reduce using rule 78 (relExp)

    sumop  go to state 110


State 150

   86 sumExp: sumExp sumop mulExp .
   90 mulExp: mulExp . mulop unaryExp

    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    MOD  shift, and go to state 113

    $default  reduce using rule 86 (sumExp)

    mulop  go to state 114


State 151

   90 mulExp: mulExp mulop unaryExp .

    $default  reduce using rule 90 (mulExp)


State 152

   19 funDecl: typeSpec id LPAREN parms RPAREN compoundStmt .

    $default  reduce using rule 19 (funDecl)


State 153

   51 matchedSelectStmt: IF simpleExp THEN . matchedStmt ELSE matchedStmt
   52 openSelectStmt: IF simpleExp THEN . stmt
   53               | IF simpleExp THEN . matchedStmt ELSE openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    RETURN       shift, and go to state 71

    id                 go to state 47
    stmt               go to state 163
    matchedStmt        go to state 164
    openStmt           go to state 77
    expStmt            go to state 78
    compoundStmt       go to state 79
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 154

   54 matchedIterStmt: WHILE simpleExp DO . matchedStmt
   56 openIterStmt: WHILE simpleExp DO . openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    RETURN       shift, and go to state 71

    id                 go to state 47
    matchedStmt        go to state 165
    openStmt           go to state 166
    expStmt            go to state 78
    compoundStmt       go to state 79
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 155

   55 matchedIterStmt: FOR id ASGN . iterRange DO matchedStmt
   57 openIterStmt: FOR id ASGN . iterRange DO openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    iterRange    go to state 167
    simpleExp    go to state 168
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 156

    7 scopedVarDecl: STATIC typeSpec varDeclList . SEMICOLON
    9 varDeclList: varDeclList . COMMA varDeclInit

    SEMICOLON  shift, and go to state 169
    COMMA      shift, and go to state 25


State 157

   61 returnStmt: RETURN exp SEMICOLON .

    $default  reduce using rule 61 (returnStmt)


State 158

   43 compoundStmt: LCURLY localDecls stmtList RCURLY .

    $default  reduce using rule 43 (compoundStmt)


State 159

   63 exp: mutable assignop exp .

    $default  reduce using rule 63 (exp)


State 160

  103 mutable: id LBRACKET exp RBRACKET .

    $default  reduce using rule 103 (mutable)


State 161

  109 argList: argList COMMA . exp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    exp          go to state 170
    simpleExp    go to state 89
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 90
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 162

  107 call: id LPAREN argList RPAREN .

    $default  reduce using rule 107 (call)


State 163

   52 openSelectStmt: IF simpleExp THEN stmt .

    $default  reduce using rule 52 (openSelectStmt)


State 164

   31 stmt: matchedStmt .
   51 matchedSelectStmt: IF simpleExp THEN matchedStmt . ELSE matchedStmt
   53 openSelectStmt: IF simpleExp THEN matchedStmt . ELSE openStmt

    ELSE  shift, and go to state 171

    $default  reduce using rule 31 (stmt)


State 165

   54 matchedIterStmt: WHILE simpleExp DO matchedStmt .

    $default  reduce using rule 54 (matchedIterStmt)


State 166

   56 openIterStmt: WHILE simpleExp DO openStmt .

    $default  reduce using rule 56 (openIterStmt)


State 167

   55 matchedIterStmt: FOR id ASGN iterRange . DO matchedStmt
   57 openIterStmt: FOR id ASGN iterRange . DO openStmt

    DO  shift, and go to state 172


State 168

   58 iterRange: simpleExp . TO simpleExp
   59          | simpleExp . TO simpleExp BY simpleExp
   72 simpleExp: simpleExp . OR andExp

    TO  shift, and go to state 173
    OR  shift, and go to state 99


State 169

    7 scopedVarDecl: STATIC typeSpec varDeclList SEMICOLON .

    $default  reduce using rule 7 (scopedVarDecl)


State 170

  109 argList: argList COMMA exp .

    $default  reduce using rule 109 (argList)


State 171

   51 matchedSelectStmt: IF simpleExp THEN matchedStmt ELSE . matchedStmt
   53 openSelectStmt: IF simpleExp THEN matchedStmt ELSE . openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    RETURN       shift, and go to state 71

    id                 go to state 47
    matchedStmt        go to state 174
    openStmt           go to state 175
    expStmt            go to state 78
    compoundStmt       go to state 79
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 172

   55 matchedIterStmt: FOR id ASGN iterRange DO . matchedStmt
   57 openIterStmt: FOR id ASGN iterRange DO . openStmt

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    SEMICOLON    shift, and go to state 64
    LCURLY       shift, and go to state 29
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    BREAK        shift, and go to state 66
    IF           shift, and go to state 67
    WHILE        shift, and go to state 68
    FOR          shift, and go to state 69
    NOT          shift, and go to state 46
    RETURN       shift, and go to state 71

    id                 go to state 47
    matchedStmt        go to state 176
    openStmt           go to state 177
    expStmt            go to state 78
    compoundStmt       go to state 79
    matchedSelectStmt  go to state 82
    openSelectStmt     go to state 83
    matchedIterStmt    go to state 84
    openIterStmt       go to state 85
    returnStmt         go to state 86
    breakStmt          go to state 87
    exp                go to state 88
    simpleExp          go to state 89
    andExp             go to state 49
    unaryRelExp        go to state 50
    relExp             go to state 51
    sumExp             go to state 52
    mulExp             go to state 53
    unaryExp           go to state 54
    unaryop            go to state 55
    factor             go to state 56
    mutable            go to state 90
    immutable          go to state 58
    call               go to state 59
    constant           go to state 60


State 173

   58 iterRange: simpleExp TO . simpleExp
   59          | simpleExp TO . simpleExp BY simpleExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    simpleExp    go to state 178
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 174

   51 matchedSelectStmt: IF simpleExp THEN matchedStmt ELSE matchedStmt .

    $default  reduce using rule 51 (matchedSelectStmt)


State 175

   53 openSelectStmt: IF simpleExp THEN matchedStmt ELSE openStmt .

    $default  reduce using rule 53 (openSelectStmt)


State 176

   55 matchedIterStmt: FOR id ASGN iterRange DO matchedStmt .

    $default  reduce using rule 55 (matchedIterStmt)


State 177

   57 openIterStmt: FOR id ASGN iterRange DO openStmt .

    $default  reduce using rule 57 (openIterStmt)


State 178

   58 iterRange: simpleExp TO simpleExp .
   59          | simpleExp TO simpleExp . BY simpleExp
   72 simpleExp: simpleExp . OR andExp

    BY  shift, and go to state 179
    OR  shift, and go to state 99

    $default  reduce using rule 58 (iterRange)


State 179

   59 iterRange: simpleExp TO simpleExp BY . simpleExp

    NUMCONST     shift, and go to state 38
    ID           shift, and go to state 1
    STRINGCONST  shift, and go to state 39
    CHARCONST    shift, and go to state 40
    BOOLCONST    shift, and go to state 41
    LPAREN       shift, and go to state 42
    QUESTION     shift, and go to state 43
    SUB          shift, and go to state 44
    MUL          shift, and go to state 45
    NOT          shift, and go to state 46

    id           go to state 47
    simpleExp    go to state 180
    andExp       go to state 49
    unaryRelExp  go to state 50
    relExp       go to state 51
    sumExp       go to state 52
    mulExp       go to state 53
    unaryExp     go to state 54
    unaryop      go to state 55
    factor       go to state 56
    mutable      go to state 57
    immutable    go to state 58
    call         go to state 59
    constant     go to state 60


State 180

   59 iterRange: simpleExp TO simpleExp BY simpleExp .
   72 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 99

    $default  reduce using rule 59 (iterRange)
