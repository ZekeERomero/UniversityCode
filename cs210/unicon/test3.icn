procedure main ()
#SCALAR TYPES ARE UMMUTABLE and PASESED BY VALUE
	#integers use base 2-36
	x := 16rffff
	#can use ^ as exponent
	#real numbers use double precision
	#strings

	s := "hello this is bob" #index is in between two characters
	#    ^^
	#&pos 1 is the position between arrows
	write(s[1:3]) #characters between position 1 and 3
	write(s[1:-1])
	write(s[3:0])
	
	#s[3:-3] := " in between "
	#write(s)

	s := s[1:4] || " really in between " || s[4:0]
	
	write(s)
	s:= s || "immuatable"
	write(s)
	#csets
	##=== is both elements are same data type and equal
	#++ union
	#-- set difference

	#lists
	L := ["hi","CS","210"]
	#push,put,pop,pull
	every write(!L)

	#tables
	T := ["hi":"there";"CS":"210";"1":"2"]
		#hash table
		#look up values by key ("CS","hi","1")

	t := table()
	t["hello"] := 3.1415
	t[3.3] := "hi"
	t["goodbye"] := 0
	t["goodbye"] +:= 1

	write(t["hello"])
	write(T["hi"])
	write(t["goodbye"])

	every write(!T)
	every write(!t)
	
	delete(t,3.3)
	
	every k:= key(t) do write(k)

end
